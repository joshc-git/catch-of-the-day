{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\React Lessons\\\\catch-of-the-day\\\\src\\\\components\\\\Inventory.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\nimport firebase from 'firebase';\n\nvar Inventory =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Inventory, _React$Component);\n\n  function Inventory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uid: null,\n      owner: null\n    };\n\n    _this.authHandler = function _callee(authData) {\n      var store;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(base.fetch(_this.props.storeId, {\n                context: _assertThisInitialized(_this)\n              }));\n\n            case 2:\n              store = _context.sent;\n\n              if (store.owner) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(base.post(\"\".concat(_this.props.storeId, \"/owner\"), {\n                data: authData.user.uid\n              }));\n\n            case 6:\n              // Set the state of the inventory component to reflect the current user\n              _this.setState({\n                uid: authData.user.uid,\n                owner: store.owner || authData.user.uid\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.authenticate = function (provider) {\n      var authProvider = new firebase.auth[\"\".concat(provider, \"AuthProvider\")]();\n      firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);\n    };\n\n    _this.logout = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('Logging out!');\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(firebase.auth().signOut());\n\n            case 3:\n              _this.setState({\n                uid: null\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this2.authHandler({\n            uesr: uesr\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var logout = React.createElement(\"button\", {\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Log Out!\"); // Check if they are logged in\n\n      if (!this.state.uid) {\n        return React.createElement(Login, {\n          authenticate: this.authenticate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n      } // Check if they are not the owner of the store\n\n\n      if (this.state.uid !== this.state.owner) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Sorry you are not the owner!\"), logout);\n      } // They must be the owner, just render the inventory\n\n\n      return React.createElement(\"div\", {\n        className: \"inventory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Inventory\"), logout, Object.keys(this.props.fishes).map(function (key) {\n        return React.createElement(EditFishForm, {\n          key: key,\n          index: key,\n          fish: _this3.props.fishes[key],\n          updateFish: _this3.props.updateFish,\n          deleteFish: _this3.props.deleteFish,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      }), React.createElement(AddFishForm, {\n        addFish: this.props.addFish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.loadSampleFishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Load Sample Fishes\"));\n    }\n  }]);\n\n  return Inventory;\n}(React.Component);\n\nInventory.propTypes = {\n  fishes: PropTypes.object,\n  updateFish: PropTypes.func,\n  deleteFish: PropTypes.func,\n  loadSampleFishes: PropTypes.func\n};\nexport default Inventory;","map":{"version":3,"sources":["D:/React Lessons/catch-of-the-day/src/components/Inventory.js"],"names":["React","PropTypes","AddFishForm","EditFishForm","Login","base","firebaseApp","firebase","Inventory","state","uid","owner","authHandler","authData","fetch","props","storeId","context","store","post","data","user","setState","authenticate","provider","authProvider","auth","signInWithPopup","then","logout","console","log","signOut","onAuthStateChanged","uesr","Object","keys","fishes","map","key","updateFish","deleteFish","addFish","loadSampleFishes","Component","propTypes","object","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\nimport base, { firebaseApp } from '../base';\r\nimport firebase from 'firebase';\r\n\r\nclass Inventory extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes:  PropTypes.func\r\n    };\r\n\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                this.authHandler({ uesr });\r\n            }\r\n        })\r\n    }\r\n\r\n    authHandler = async (authData) => {\r\n        // Look up the current store in the firebase database\r\n        const store = await base.fetch(this.props.storeId, { context: this });\r\n        // Claim it if there is no owner\r\n        if (!store.owner) {\r\n            // save it as our own\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            })\r\n        }\r\n        // Set the state of the inventory component to reflect the current user\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        })\r\n    };\r\n\r\n    authenticate = provider => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n    };\r\n\r\n    logout = async () => {\r\n        console.log('Logging out!');\r\n        await firebase.auth().signOut();\r\n        this.setState({ uid: null });\r\n    }\r\n\r\n    render () {\r\n        const logout = <button onClick={this.logout}>Log Out!</button>;\r\n        // Check if they are logged in\r\n        if (!this.state.uid) {\r\n            return <Login authenticate={this.authenticate} />;\r\n        }\r\n        // Check if they are not the owner of the store\r\n        if (this.state.uid !== this.state.owner) {\r\n            return (\r\n                <div>\r\n                    <p>Sorry you are not the owner!</p>\r\n                    {logout}\r\n                </div>\r\n            );\r\n        }\r\n        // They must be the owner, just render the inventory\r\n        return (\r\n            <div className=\"inventory\">\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(key => <EditFishForm key={key} index={key} fish={this.props.fishes[key]} updateFish={this.props.updateFish} deleteFish={this.props.deleteFish} />)}\r\n                <AddFishForm addFish={this.props.addFish} />\r\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}