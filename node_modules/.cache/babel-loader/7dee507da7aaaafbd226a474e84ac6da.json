{"ast":null,"code":"import _objectSpread from\"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import Header from'./Header';import Order from'./Order';import Inventory from'./Inventory';import sampleFishes from'../sample-fishes';import Fish from'./Fish';import base from'../base';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={fishes:{},order:{}};_this.addFish=function(fish){// Take a copy of the existing state\nvar fishes=_objectSpread({},_this.state.fishes);// Add our new fish to that fishes variable\nfishes[\"fish\".concat(Date.now())]=fish;// Set the new fishes object to state\n_this.setState({fishes:fishes});};_this.updateFish=function(key,updatedFish){// Take a copy of the current state\nvar fishes=_objectSpread({},_this.state.fishes);// Update that state\nfishes[key]=updatedFish;// Set that to state\n_this.setState({fishes:fishes});};_this.deleteFish=function(key){// Take a copy of state\nvar fishes=_objectSpread({},_this.state.fishes);// Update the state\nfishes[key]=null;// Update state\n_this.setState({fishes:fishes});};_this.loadSampleFishes=function(){_this.setState({fishes:sampleFishes});};_this.addToOrder=function(key){// Take a copy of state\nvar order=_objectSpread({},_this.state.order);// Either add to the order, or update the number in our order\norder[key]=order[key]+1||1;// Call setState to update our state object\n_this.setState({order:order});};_this.deleteOrder=function(key){// Take a copy of state\nvar order=_objectSpread({},_this.state.order);// Update the state\ndelete order[key];// Update state\n_this.setState({order:order});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var params=this.props.match.params;// first reinstate our localstorage\nvar localStorageRef=localStorage.getItem(params.storeId);if(localStorageRef){this.setState({order:JSON.parse(localStorageRef)});}this.ref=base.syncState(\"\".concat(params.storeId,\"/fishes\"),{context:this,state:'fishes'});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){localStorage.setItem(this.props.match.params.storeId,JSON.stringify(this.state.order));}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){base.removeBinding(this.ref);}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",{className:\"catch-of-the-day\"},React.createElement(\"div\",{className:\"menu\"},React.createElement(Header,{tagline:\"Fresh Seafood Market\"}),React.createElement(\"ul\",{className:\"fishes\"},Object.keys(this.state.fishes).map(function(key){return React.createElement(Fish,{index:key,key:key,details:_this2.state.fishes[key],addToOrder:_this2.addToOrder});}))),React.createElement(Order,{fishes:this.state.fishes,order:this.state.order,deleteOrder:this.deleteOrder}),React.createElement(Inventory,{addFish:this.addFish,deleteFish:this.deleteFish,updateFish:this.updateFish,loadSampleFishes:this.loadSampleFishes,fishes:this.state.fishes,storeId:this.props.match.params.storeId}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["D:/React Lessons/catch-of-the-day/src/components/App.js"],"names":["React","Header","Order","Inventory","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","updateFish","key","updatedFish","deleteFish","loadSampleFishes","addToOrder","deleteOrder","params","props","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","ref","syncState","context","setItem","stringify","removeBinding","Object","keys","map","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        // first reinstate our localstorage\r\n        const localStorageRef = localStorage.getItem(params.storeId)\r\n        if(localStorageRef) {\r\n            this.setState({ order: JSON.parse(localStorageRef) })\r\n        }\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n    addFish = (fish) => {\r\n        // Take a copy of the existing state\r\n        const fishes = { ...this.state.fishes };\r\n        // Add our new fish to that fishes variable\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        // Set the new fishes object to state\r\n        this.setState({ fishes });\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        // Take a copy of the current state\r\n        const fishes = { ...this.state.fishes };\r\n        // Update that state\r\n        fishes[key] = updatedFish;\r\n        // Set that to state\r\n        this.setState({ fishes });\r\n    };\r\n\r\n    deleteFish = (key) => {\r\n        // Take a copy of state\r\n        const fishes = { ...this.state.fishes };\r\n        // Update the state\r\n        fishes[key] = null;\r\n        // Update state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({ fishes: sampleFishes });\r\n    };\r\n\r\n    addToOrder = (key) => {\r\n        // Take a copy of state\r\n        const order = { ...this.state.order };\r\n        // Either add to the order, or update the number in our order\r\n        order[key] = order[key] + 1 || 1;\r\n        // Call setState to update our state object\r\n        this.setState({ order });\r\n    };\r\n\r\n    deleteOrder = (key) => {\r\n        // Take a copy of state\r\n        const order = { ...this.state.order };\r\n        // Update the state\r\n        delete order[key];\r\n        // Update state\r\n        this.setState({ order });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh Seafood Market\" />\r\n                    <ul className=\"fishes\">\r\n                        {Object.keys(this.state.fishes).map(key => (<Fish index={key} key={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />))}\r\n                    </ul>\r\n                </div>\r\n                <Order fishes={this.state.fishes} order={this.state.order} deleteOrder={this.deleteOrder} />\r\n                <Inventory addFish={this.addFish} deleteFish={this.deleteFish} updateFish={this.updateFish} loadSampleFishes={this.loadSampleFishes} fishes={this.state.fishes} storeId={this.props.match.params.storeId} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}