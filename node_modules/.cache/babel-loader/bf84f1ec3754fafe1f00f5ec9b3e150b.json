{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _classCallCheck from\"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:\\\\React Lessons\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import AddFishForm from'./AddFishForm';import EditFishForm from'./EditFishForm';import Login from'./Login';import base,{firebaseApp}from'../base';import firebase from'firebase';var Inventory=/*#__PURE__*/function(_React$Component){_inherits(Inventory,_React$Component);function Inventory(){var _getPrototypeOf2;var _this;_classCallCheck(this,Inventory);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={uid:null,owner:null};_this.authHandler=function _callee(authData){var store;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(base.fetch(_this.props.storeId,{context:_assertThisInitialized(_this)}));case 2:store=_context.sent;if(store.owner){_context.next=6;break;}_context.next=6;return _regeneratorRuntime.awrap(base.post(\"\".concat(_this.props.storeId,\"/owner\"),{data:authData.user.uid}));case 6:// Set the state of the inventory component to reflect the current user\n_this.setState({uid:authData.user.uid,owner:store.owner||authData.user.uid});case 7:case\"end\":return _context.stop();}}});};_this.authenticate=function(provider){var authProvider=new firebase.auth[\"\".concat(provider,\"AuthProvider\")]();firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);};_this.logout=function _callee2(){return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log('Logging out!');_context2.next=3;return _regeneratorRuntime.awrap(firebase.auth().signOut());case 3:_this.setState({uid:null});case 4:case\"end\":return _context2.stop();}}});};return _this;}_createClass(Inventory,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;firebase.auth().onAuthStateChanged(function(user){if(user){_this2.authHandler({user:user});}});}},{key:\"render\",value:function render(){var _this3=this;var logout=React.createElement(\"button\",{onClick:this.logout},\"Log Out!\");// Check if they are logged in\nif(!this.state.uid){return React.createElement(Login,{authenticate:this.authenticate});}// Check if they are not the owner of the store\nif(this.state.uid!==this.state.owner){return React.createElement(\"div\",null,React.createElement(\"p\",null,\"Sorry you are not the owner!\"),logout);}// They must be the owner, just render the inventory\nreturn React.createElement(\"div\",{className:\"inventory\"},React.createElement(\"h2\",null,\"Inventory\"),logout,Object.keys(this.props.fishes).map(function(key){return React.createElement(EditFishForm,{key:key,index:key,fish:_this3.props.fishes[key],updateFish:_this3.props.updateFish,deleteFish:_this3.props.deleteFish});}),React.createElement(AddFishForm,{addFish:this.props.addFish}),React.createElement(\"button\",{onClick:this.props.loadSampleFishes},\"Load Sample Fishes\"));}}]);return Inventory;}(React.Component);export default Inventory;","map":{"version":3,"sources":["D:/React Lessons/catch-of-the-day/src/components/Inventory.js"],"names":["React","AddFishForm","EditFishForm","Login","base","firebaseApp","firebase","Inventory","state","uid","owner","authHandler","authData","fetch","props","storeId","context","store","post","data","user","setState","authenticate","provider","authProvider","auth","signInWithPopup","then","logout","console","log","signOut","onAuthStateChanged","Object","keys","fishes","map","key","updateFish","deleteFish","addFish","loadSampleFishes","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\nimport base, { firebaseApp } from '../base';\r\nimport firebase from 'firebase';\r\n\r\nclass Inventory extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes:  PropTypes.func\r\n    };\r\n\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                this.authHandler({ user });\r\n            }\r\n        })\r\n    }\r\n\r\n    authHandler = async (authData) => {\r\n        // Look up the current store in the firebase database\r\n        const store = await base.fetch(this.props.storeId, { context: this });\r\n        // Claim it if there is no owner\r\n        if (!store.owner) {\r\n            // save it as our own\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            })\r\n        }\r\n        // Set the state of the inventory component to reflect the current user\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        })\r\n    };\r\n\r\n    authenticate = provider => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n    };\r\n\r\n    logout = async () => {\r\n        console.log('Logging out!');\r\n        await firebase.auth().signOut();\r\n        this.setState({ uid: null });\r\n    }\r\n\r\n    render () {\r\n        const logout = <button onClick={this.logout}>Log Out!</button>;\r\n        // Check if they are logged in\r\n        if (!this.state.uid) {\r\n            return <Login authenticate={this.authenticate} />;\r\n        }\r\n        // Check if they are not the owner of the store\r\n        if (this.state.uid !== this.state.owner) {\r\n            return (\r\n                <div>\r\n                    <p>Sorry you are not the owner!</p>\r\n                    {logout}\r\n                </div>\r\n            );\r\n        }\r\n        // They must be the owner, just render the inventory\r\n        return (\r\n            <div className=\"inventory\">\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(key => <EditFishForm key={key} index={key} fish={this.props.fishes[key]} updateFish={this.props.updateFish} deleteFish={this.props.deleteFish} />)}\r\n                <AddFishForm addFish={this.props.addFish} />\r\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}