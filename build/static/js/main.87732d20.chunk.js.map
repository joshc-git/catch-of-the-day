{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","deleteOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","console","log","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"qPAAO,SAASA,EAAYC,GAC1B,OAAQA,EAAQ,KAAKC,eAAe,QAAS,CAC3CC,MAAO,WACPC,SAAU,QAIP,SAASC,EAAMC,GACpB,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAcrC,SAASC,IACd,IAAMC,EAAa,CACjB,WACA,YACA,QACA,OACA,UACA,QACA,YACA,WACA,OACA,cACA,gBACA,QACA,SACA,YACA,UACA,YACA,QACA,aACA,SACA,WACA,cACA,SACA,SACA,WACA,QACA,UACA,OACA,aACA,UACA,YACA,UACA,YACA,QACA,cACA,UACA,WAoCF,MAAM,GAAN,OAAUP,EAAMO,GAAhB,YAA+BP,EAAMO,GAArC,YAAoDP,EAjCtC,CACZ,QACA,MACA,WACA,QACA,OACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,WACA,WACA,QACA,OACA,QACA,SACA,aACA,WACA,YACA,QACA,SACA,SACA,YACA,WACA,U,IChEWQ,E,2MApBXC,QAAUC,IAAMC,Y,EAChBC,UAAY,SAAAC,GAERA,EAAMC,iBAEN,IAAMC,EAAY,EAAKN,QAAQO,QAAQC,MAEvC,EAAKC,MAAMC,QAAQC,KAAnB,iBAAkCL,K,wEAGlC,OACI,0BAAMM,UAAU,iBAAiBC,SAAUC,KAAKX,WAC5C,oDACA,2BAAOY,KAAK,OAAOC,IAAKF,KAAKd,QAASiB,UAAQ,EAACC,YAAY,aAAaC,aAActB,MACtF,4BAAQkB,KAAK,UAAb,uB,GAlBUd,IAAMmB,W,QCmBjBC,EApBA,SAACZ,GAAD,OACX,4BAAQG,UAAU,OACd,oCAEI,0BAAMA,UAAU,SACZ,0BAAMA,UAAU,MAAhB,MACA,0BAAMA,UAAU,OAAhB,QAJR,OAQA,wBAAIA,UAAU,WACV,8BAAOH,EAAMa,Y,QC4DVC,E,2MA/DXC,YAAc,SAACC,GACX,IAAMC,EAAO,EAAKjB,MAAMkB,OAAOF,GACzBG,EAAQ,EAAKnB,MAAMoB,MAAMJ,GACzBK,EAAcJ,GAAwB,cAAhBA,EAAKK,OAC3BC,EAAoB,CACtBC,WAAY,QACZR,MACAS,QAAS,CAAEC,MAAM,IAAKC,KAAM,MAGhC,OAAIV,EACAI,EAUJ,kBAAC,gBAAkBE,EACf,wBAAIP,IAAKA,GACL,8BACI,kBAAC,kBAAD,CAAiBY,UAAU,OAAOzB,UAAU,SACxC,kBAAC,gBAAD,CAAeqB,WAAW,QAAQR,IAAKG,EAAOM,QAAS,CAACC,MAAM,IAAKC,KAAM,MACrE,8BAAOR,KAHnB,OAMSF,EAAKY,KACTpD,EAAY0C,EAAQF,EAAKa,OAC1B,4BAAQC,QAAS,kBAAM,EAAK/B,MAAMgC,YAAYhB,KAA9C,WAlBR,kBAAC,gBAAkBO,EACf,wBAAIP,IAAKA,GAAT,SACWC,EAAOA,EAAKY,KAAO,OAD9B,6BAJS,M,wEA2BV,IAAD,OACAI,EAAWC,OAAOC,KAAK9B,KAAKL,MAAMoB,OAClCgB,EAAQH,EAASI,QAAO,SAACC,EAAWtB,GACtC,IAAMC,EAAO,EAAKjB,MAAMkB,OAAOF,GACzBG,EAAQ,EAAKnB,MAAMoB,MAAMJ,GAE/B,OADoBC,GAAwB,cAAhBA,EAAKK,OAEtBgB,EAAanB,EAAQF,EAAKa,MAE9BQ,IACR,GACH,OACI,yBAAKnC,UAAU,cACX,qCACA,kBAAC,kBAAD,CAAiByB,UAAU,KAAKzB,UAAU,SACrC8B,EAASM,IAAIlC,KAAKU,cAEvB,yBAAKZ,UAAU,SAAf,SAEI,gCAAS1B,EAAY2D,U,GA9DrB5C,IAAMmB,W,yBCyCX6B,E,2MA1CXC,QAAUjD,IAAMC,Y,EAChBiD,SAAWlD,IAAMC,Y,EACjBkD,UAAYnD,IAAMC,Y,EAClBmD,QAAUpD,IAAMC,Y,EAChBoD,SAAWrD,IAAMC,Y,EAMjBqD,WAAa,SAACnD,GAEVA,EAAMC,iBACN,IAAMqB,EAAO,CACTY,KAAM,EAAKY,QAAQ3C,QAAQC,MAC3B+B,MAAOiB,WAAW,EAAKL,SAAS5C,QAAQC,OACxCuB,OAAQ,EAAKqB,UAAU7C,QAAQC,MAC/BiD,KAAM,EAAKJ,QAAQ9C,QAAQC,MAC3BkD,MAAO,EAAKJ,SAAS/C,QAAQC,OAEjC,EAAKC,MAAMkD,QAAQjC,GAEnBtB,EAAMwD,cAAcC,S,wEAIpB,OACI,0BAAMjD,UAAU,YAAYC,SAAUC,KAAKyC,YACvC,2BAAOjB,KAAK,OAAOtB,IAAKF,KAAKoC,QAASnC,KAAK,OAAOG,YAAY,SAC9D,2BAAOoB,KAAK,QAAQtB,IAAKF,KAAKqC,SAAUpC,KAAK,OAAOG,YAAY,UAChE,4BAAQoB,KAAK,SAAStB,IAAKF,KAAKsC,WAC5B,4BAAQ5C,MAAM,aAAd,UACA,4BAAQA,MAAM,eAAd,cAEJ,8BAAU8B,KAAK,OAAOtB,IAAKF,KAAKuC,QAASnC,YAAY,SACrD,2BAAOoB,KAAK,QAAQtB,IAAKF,KAAKwC,SAAUvC,KAAK,OAAOG,YAAY,UAChE,4BAAQH,KAAK,UAAb,mB,GArCUd,IAAMmB,W,QCsCjB0C,E,2MA1BXC,aAAe,SAAC3D,GAGZ,IAAM4D,EAAW,eACV,EAAKvD,MAAMiB,KADD,eAEZtB,EAAMwD,cAActB,KAAOlC,EAAMwD,cAAcpD,QAEpD,EAAKC,MAAMwD,WAAW,EAAKxD,MAAMyD,MAAOF,I,wEAElC,IAAD,OACL,OACI,yBAAKpD,UAAU,aACX,2BAAOG,KAAK,OAAOuB,KAAK,OAAO6B,SAAUrD,KAAKiD,aAAcvD,MAAOM,KAAKL,MAAMiB,KAAKY,OACnF,2BAAOvB,KAAK,OAAOuB,KAAK,QAAQ6B,SAAUrD,KAAKiD,aAAcvD,MAAOM,KAAKL,MAAMiB,KAAKa,QACpF,4BAAQD,KAAK,SAAS6B,SAAUrD,KAAKiD,aAAcvD,MAAOM,KAAKL,MAAMiB,KAAKK,QACtE,4BAAQvB,MAAM,aAAd,UACA,4BAAQA,MAAM,eAAd,cAEJ,8BAAU8B,KAAK,OAAO6B,SAAUrD,KAAKiD,aAAcvD,MAAOM,KAAKL,MAAMiB,KAAK+B,OAC1E,2BAAO1C,KAAK,OAAOuB,KAAK,QAAQ6B,SAAUrD,KAAKiD,aAAcvD,MAAOM,KAAKL,MAAMiB,KAAKgC,QACpF,4BAAQlB,QAAS,kBAAM,EAAK/B,MAAM2D,WAAW,EAAK3D,MAAMyD,SAAxD,oB,GAhCWjE,IAAMmB,WCYlBiD,EAZD,SAAC5D,GAAD,OACV,yBAAKG,UAAU,SACX,+CACA,wEACA,4BAAQA,UAAU,SAAS4B,QAAS,kBAAM/B,EAAM6D,aAAa,YAA7D,wB,kCCJFC,EAAcC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,0CACZC,YAAa,mDASFC,EANFC,IAAOC,YAAYR,EAAYS,YC4E7BC,E,2MArEXC,MAAQ,CACJC,IAAK,KACLC,MAAO,M,EAWXC,YAAc,SAAOC,GAAP,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAEUV,EAAKY,MAAM,EAAKhF,MAAMiF,QAAS,CAAEC,QAAQ,kBAFnD,WAEJC,EAFI,QAICR,MAJD,kCAAAG,EAAA,MAMAV,EAAKgB,KAAL,UAAa,EAAKpF,MAAMiF,QAAxB,UAAyC,CAC3CI,KAAMR,EAASS,KAAKZ,OAPlB,OAWV,EAAKa,SAAS,CACVb,IAAKG,EAASS,KAAKZ,IACnBC,MAAOQ,EAAMR,OAASE,EAASS,KAAKZ,MAb9B,sC,EAiBdb,aAAe,SAAA2B,GACX,IAAMC,EAAe,IAAI1B,IAAS2B,KAAT,UAAiBF,EAAjB,kBACzB1B,EAAY4B,OAAOC,gBAAgBF,GAAcG,KAAK,EAAKhB,c,EAG/DiB,OAAS,oBAAAf,EAAAC,OAAA,uDACLe,QAAQC,IAAI,gBADP,WAAAjB,EAAA,MAECf,IAAS2B,OAAOM,WAFjB,OAGL,EAAKT,SAAS,CAAEb,IAAK,OAHhB,sC,mFA9BY,IAAD,OAChBX,IAAS2B,OAAOO,oBAAmB,SAAAX,GAC5BA,GACC,EAAKV,YAAY,CAAEU,c,+BAiCpB,IAAD,OACAO,EAAS,4BAAQ9D,QAAS1B,KAAKwF,QAAtB,YAEf,OAAKxF,KAAKoE,MAAMC,IAIZrE,KAAKoE,MAAMC,MAAQrE,KAAKoE,MAAME,MAE1B,6BACI,2DACCkB,GAMT,yBAAK1F,UAAU,aACX,yCACC0F,EACA3D,OAAOC,KAAK9B,KAAKL,MAAMkB,QAAQqB,KAAI,SAAAvB,GAAG,OAAI,kBAAC,EAAD,CAAcA,IAAKA,EAAKyC,MAAOzC,EAAKC,KAAM,EAAKjB,MAAMkB,OAAOF,GAAMwC,WAAY,EAAKxD,MAAMwD,WAAYG,WAAY,EAAK3D,MAAM2D,gBACvK,kBAAC,EAAD,CAAaT,QAAS7C,KAAKL,MAAMkD,UACjC,4BAAQnB,QAAS1B,KAAKL,MAAMkG,kBAA5B,uBAlBG,kBAAC,EAAD,CAAOrC,aAAcxD,KAAKwD,mB,GArDrBrE,IAAMmB,WC2EfO,EAlFA,CACbiF,MAAO,CACLtE,KAAM,kBACNoB,MAAO,mBACPD,KACE,wFACFlB,MAAO,KACPR,OAAQ,aAGV8E,MAAO,CACLvE,KAAM,UACNoB,MAAO,sBACPD,KACE,iFACFlB,MAAO,KACPR,OAAQ,aAGV+E,MAAO,CACLxE,KAAM,eACNoB,MAAO,uBACPD,KACE,qGACFlB,MAAO,KACPR,OAAQ,eAGVgF,MAAO,CACLzE,KAAM,YACNoB,MAAO,mBACPD,KACE,kGACFlB,MAAO,KACPR,OAAQ,aAGViF,MAAO,CACL1E,KAAM,YACNoB,MAAO,mBACPD,KACE,2EACFlB,MAAO,KACPR,OAAQ,aAGVkF,MAAO,CACL3E,KAAM,kBACNoB,MAAO,qBACPD,KACE,0GACFlB,MAAO,KACPR,OAAQ,aAGVmF,MAAO,CACL5E,KAAM,UACNoB,MAAO,sBACPD,KAAM,oEACNlB,MAAO,KACPR,OAAQ,aAGVoF,MAAO,CACL7E,KAAM,UACNoB,MAAO,sBACPD,KACE,sFACFlB,MAAO,IACPR,OAAQ,aAGVqF,MAAO,CACL9E,KAAM,eACNoB,MAAO,qBACPD,KACE,8FACFlB,MAAO,KACPR,OAAQ,cC/CGsF,E,iLAjBA,IAAD,SACqCvG,KAAKL,MAAM6G,QAA/C5D,EADD,EACCA,MAAOpB,EADR,EACQA,KAAMC,EADd,EACcA,MAAOkB,EADrB,EACqBA,KACrB3B,EAAyB,cAFzB,EAC2BC,OAEjC,OACI,wBAAInB,UAAU,aACV,yBAAK2G,IAAK7D,EAAO8D,IAAKlF,IACtB,wBAAI1B,UAAU,aACT0B,EACD,0BAAM1B,UAAU,SAAS1B,EAAYqD,KAEzC,2BAAIkB,GACJ,4BAAQgE,UAAW3F,EAAaU,QAAS,kBAAM,EAAK/B,MAAMiH,WAAW,EAAKjH,MAAMyD,SAASpC,EAAc,cAAgB,iB,GAtBpH7B,IAAMmB,WCqGVuG,E,2MA/FXzC,MAAQ,CACJvD,OAAQ,GACRE,MAAO,I,EA4BX8B,QAAU,SAACjC,GAEP,IAAMC,EAAM,eAAQ,EAAKuD,MAAMvD,QAE/BA,EAAO,OAAD,OAAQiG,KAAKC,QAAWnG,EAE9B,EAAKsE,SAAS,CAAErE,Y,EAGpBsC,WAAa,SAACxC,EAAKuC,GAEf,IAAMrC,EAAM,eAAQ,EAAKuD,MAAMvD,QAE/BA,EAAOF,GAAOuC,EAEd,EAAKgC,SAAS,CAAErE,Y,EAGpByC,WAAa,SAAC3C,GAEV,IAAME,EAAM,eAAQ,EAAKuD,MAAMvD,QAE/BA,EAAOF,GAAO,KAEd,EAAKuE,SAAS,CAAErE,Y,EAGpBgF,iBAAmB,WACf,EAAKX,SAAS,CAAErE,OAAQmG,K,EAG5BJ,WAAa,SAACjG,GAEV,IAAMI,EAAK,eAAQ,EAAKqD,MAAMrD,OAE9BA,EAAMJ,GAAOI,EAAMJ,GAAO,GAAK,EAE/B,EAAKuE,SAAS,CAAEnE,W,EAGpBY,YAAc,SAAChB,GAEX,IAAMI,EAAK,eAAQ,EAAKqD,MAAMrD,cAEvBA,EAAMJ,GAEb,EAAKuE,SAAS,CAAEnE,W,mFAnEC,IACTkG,EAAWjH,KAAKL,MAAMuH,MAAtBD,OAEFE,EAAkBC,aAAaC,QAAQJ,EAAOrC,SACjDuC,GACCnH,KAAKkF,SAAS,CAAEnE,MAAOuG,KAAKC,MAAMJ,KAEtCnH,KAAKE,IAAM6D,EAAKyD,UAAL,UAAkBP,EAAOrC,QAAzB,WAA2C,CAClDC,QAAS7E,KACToE,MAAO,a,2CAKXgD,aAAaK,QAAQzH,KAAKL,MAAMuH,MAAMD,OAAOrC,QAAS0C,KAAKI,UAAU1H,KAAKoE,MAAMrD,U,6CAIhFgD,EAAK4D,cAAc3H,KAAKE,O,+BAoDlB,IAAD,OACL,OACI,yBAAKJ,UAAU,oBACX,yBAAKA,UAAU,QACX,kBAAC,EAAD,CAAQU,QAAQ,yBAChB,wBAAIV,UAAU,UACT+B,OAAOC,KAAK9B,KAAKoE,MAAMvD,QAAQqB,KAAI,SAAAvB,GAAG,OAAK,kBAAC,EAAD,CAAMyC,MAAOzC,EAAKA,IAAKA,EAAK6F,QAAS,EAAKpC,MAAMvD,OAAOF,GAAMiG,WAAY,EAAKA,kBAGlI,kBAAC,EAAD,CAAO/F,OAAQb,KAAKoE,MAAMvD,OAAQE,MAAOf,KAAKoE,MAAMrD,MAAOY,YAAa3B,KAAK2B,cAC7E,kBAAC,EAAD,CAAWkB,QAAS7C,KAAK6C,QAASS,WAAYtD,KAAKsD,WAAYH,WAAYnD,KAAKmD,WAAY0C,iBAAkB7F,KAAK6F,iBAAkBhF,OAAQb,KAAKoE,MAAMvD,OAAQ+D,QAAS5E,KAAKL,MAAMuH,MAAMD,OAAOrC,e,GA1F/LzF,IAAMmB,WCDTsH,EANE,kBACb,6BACI,+CCYOC,EAVA,kBACX,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAI3G,UAAWtC,IACjC,kBAAC+I,EAAA,EAAD,CAAOE,KAAK,kBAAkB3G,UAAWsF,IACzC,kBAACmB,EAAA,EAAD,CAAOzG,UAAWqG,O,MCN9BO,iBAAO,kBAAC,EAAD,MAAYC,SAASC,cAAc,Y","file":"static/js/main.87732d20.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends React.Component {\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    }\r\n    myInput = React.createRef();\r\n    goToStore = event => {\r\n        // Stop form from submitting\r\n        event.preventDefault();\r\n        // Get the text from input\r\n        const storeName = this.myInput.current.value;\r\n        // Change the page to /store/whatever-they-entered\r\n        this.props.history.push(`/store/${storeName}`);\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n                <h2>Please enter a Store</h2>\r\n                <input type=\"text\" ref={this.myInput} required placeholder=\"Store Name\" defaultValue={getFunName()} />\r\n                <button type=\"submit\">Visit Store -></button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => (\r\n    <header className=\"top\">\r\n        <h1>\r\n            Catch \r\n            <span className=\"ofThe\">\r\n                <span className=\"of\">Of</span>\r\n                <span className=\"the\">the</span>\r\n            </span>\r\n            Day\r\n        </h1>\r\n        <h3 className=\"tagline\">\r\n            <span>{props.tagline}</span>\r\n        </h3>\r\n    </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        deleteOrder: PropTypes.func\r\n    }\r\n    renderOrder = (key) => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        const transitionOptions = {\r\n            classNames: \"order\",\r\n            key,\r\n            timeout: { enter:500, exit: 500 }\r\n        }\r\n        // Make sure the fish is loaded before we continue\r\n        if(!fish) return null;\r\n        if(!isAvailable) {\r\n            return (\r\n            <CSSTransition {...transitionOptions}>\r\n                <li key={key}>\r\n                    Sorry {fish ? fish.name : 'fish'} is no longer available!\r\n                </li>\r\n            </CSSTransition>\r\n            )\r\n        }\r\n        return (\r\n        <CSSTransition {...transitionOptions}>\r\n            <li key={key}>\r\n                <span>\r\n                    <TransitionGroup component=\"span\" className=\"count\">\r\n                        <CSSTransition classNames=\"count\" key={count} timeout={{enter:500, exit: 500}}>\r\n                            <span>{count}</span>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                    lbs {fish.name}\r\n                    {formatPrice(count * fish.price)}\r\n                    <button onClick={() => this.props.deleteOrder(key)}>&times;</button>\r\n                </span>\r\n            </li>\r\n        </CSSTransition>\r\n        );\r\n    }\r\n    render () {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if(isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n        return (\r\n            <div className=\"order-wrap\">\r\n                <h2>Order</h2>\r\n                <TransitionGroup component=\"ul\" className=\"order\">\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n                <div className=\"total\">\r\n                    Total:\r\n                    <strong>{formatPrice(total)}</strong>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    }\r\n\r\n    createFish = (event) => {\r\n        // stop the form from submitting\r\n        event.preventDefault();\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value,\r\n        }\r\n        this.props.addFish(fish);\r\n        // refresh the form\r\n        event.currentTarget.reset();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"name\" />\r\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"price\" />\r\n                <select name=\"status\" ref={this.statusRef}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"desc\" />\r\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"image\" />\r\n                <button type=\"submit\">+ Add Fish</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func\r\n    }\r\n    handleChange = (event) => {\r\n        // Update that fish\r\n        // Take a copy of the current fish\r\n        const updatedFish = { \r\n            ...this.props.fish,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        };\r\n        this.props.updateFish(this.props.index, updatedFish);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"fish-edit\">\r\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\r\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\r\n                <select name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\r\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\r\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>Log In With Github</button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDgV9ekGm19J7XbphbBEeua5U9Ww9otJLo\",\r\n    authDomain: \"catch-of-the-day-josh-c.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-josh-c.firebaseio.com\"\r\n})\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// this is a named export\r\nexport { firebaseApp };\r\n\r\n// this is a default export\r\nexport default base;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\nimport base, { firebaseApp } from '../base';\r\nimport firebase from 'firebase';\r\n\r\nclass Inventory extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes:  PropTypes.func\r\n    };\r\n\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                this.authHandler({ user });\r\n            }\r\n        })\r\n    }\r\n\r\n    authHandler = async (authData) => {\r\n        // Look up the current store in the firebase database\r\n        const store = await base.fetch(this.props.storeId, { context: this });\r\n        // Claim it if there is no owner\r\n        if (!store.owner) {\r\n            // save it as our own\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            })\r\n        }\r\n        // Set the state of the inventory component to reflect the current user\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        })\r\n    };\r\n\r\n    authenticate = provider => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n    };\r\n\r\n    logout = async () => {\r\n        console.log('Logging out!');\r\n        await firebase.auth().signOut();\r\n        this.setState({ uid: null });\r\n    }\r\n\r\n    render () {\r\n        const logout = <button onClick={this.logout}>Log Out!</button>;\r\n        // Check if they are logged in\r\n        if (!this.state.uid) {\r\n            return <Login authenticate={this.authenticate} />;\r\n        }\r\n        // Check if they are not the owner of the store\r\n        if (this.state.uid !== this.state.owner) {\r\n            return (\r\n                <div>\r\n                    <p>Sorry you are not the owner!</p>\r\n                    {logout}\r\n                </div>\r\n            );\r\n        }\r\n        // They must be the owner, just render the inventory\r\n        return (\r\n            <div className=\"inventory\">\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(key => <EditFishForm key={key} index={key} fish={this.props.fishes[key]} updateFish={this.props.updateFish} deleteFish={this.props.deleteFish} />)}\r\n                <AddFishForm addFish={this.props.addFish} />\r\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        addToOrder: PropTypes.func\r\n    }\r\n    render () {\r\n        const {image, name, price, desc, status} = this.props.details;\r\n        const isAvailable = status === 'available';\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name} />\r\n                <h3 className=\"fish-name\">\r\n                    {name}\r\n                    <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>{isAvailable ? 'Add To Cart' : 'Sold Out'}</button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fish;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        // first reinstate our localstorage\r\n        const localStorageRef = localStorage.getItem(params.storeId)\r\n        if(localStorageRef) {\r\n            this.setState({ order: JSON.parse(localStorageRef) })\r\n        }\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n    addFish = (fish) => {\r\n        // Take a copy of the existing state\r\n        const fishes = { ...this.state.fishes };\r\n        // Add our new fish to that fishes variable\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        // Set the new fishes object to state\r\n        this.setState({ fishes });\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        // Take a copy of the current state\r\n        const fishes = { ...this.state.fishes };\r\n        // Update that state\r\n        fishes[key] = updatedFish;\r\n        // Set that to state\r\n        this.setState({ fishes });\r\n    };\r\n\r\n    deleteFish = (key) => {\r\n        // Take a copy of state\r\n        const fishes = { ...this.state.fishes };\r\n        // Update the state\r\n        fishes[key] = null;\r\n        // Update state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({ fishes: sampleFishes });\r\n    };\r\n\r\n    addToOrder = (key) => {\r\n        // Take a copy of state\r\n        const order = { ...this.state.order };\r\n        // Either add to the order, or update the number in our order\r\n        order[key] = order[key] + 1 || 1;\r\n        // Call setState to update our state object\r\n        this.setState({ order });\r\n    };\r\n\r\n    deleteOrder = (key) => {\r\n        // Take a copy of state\r\n        const order = { ...this.state.order };\r\n        // Update the state\r\n        delete order[key];\r\n        // Update state\r\n        this.setState({ order });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh Seafood Market\" />\r\n                    <ul className=\"fishes\">\r\n                        {Object.keys(this.state.fishes).map(key => (<Fish index={key} key={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />))}\r\n                    </ul>\r\n                </div>\r\n                <Order fishes={this.state.fishes} order={this.state.order} deleteOrder={this.deleteOrder} />\r\n                <Inventory addFish={this.addFish} deleteFish={this.deleteFish} updateFish={this.updateFish} loadSampleFishes={this.loadSampleFishes} fishes={this.state.fishes} storeId={this.props.match.params.storeId} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Found!!!!</h2>\r\n    </div>\r\n)\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={StorePicker} />\r\n            <Route path=\"/store/:storeId\" component={App} />\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}